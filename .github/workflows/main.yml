name: Build and Release for Chrome and Firefox

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'vite.config*.ts'
      - 'package.json'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - run: pnpm install

      - name: Run tests
        run: pnpm run test

      - name: Build extensions
        run: |
          pnpm run build:chrome
          pnpm run build:firefox

      - name: Archive builds
        run: |
          cd dist/chrome && zip -r -FS ../../build-chrome.zip . --exclude '*.git*'
          cd ../firefox && zip -r -FS ../../build-firefox.zip . --exclude '*.git*'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-builds
          path: |
            build-chrome.zip
            build-firefox.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - run: pnpm install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run release

      - name: Update manifest version
        run: |
          version=$(node -p "require('./package.json').version")
          jq --arg version "$version" '.version = $version' manifest.json > manifest.json.tmp && mv manifest.json.tmp manifest.json

      - name: Commit manifest changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add manifest.json
          git commit -m "chore: update manifest version to $version [skip ci]" || echo "No changes to commit"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: extension-builds

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(node -p "require('./package.json').version")
          for asset in build-chrome.zip build-firefox.zip; do
            gh release upload "v$version" $asset --clobber
          done

  rollback:
    needs: release
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - uses: actions/checkout@v4

      - name: Rollback release
        run: |
          git reset --hard HEAD~1
          git push --force origin main

      - name: Delete latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_release=$(gh release list --limit 1 | cut -f 1)
          gh release delete $latest_release --yes
