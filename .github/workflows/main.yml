name: Build and Release for Chrome and Firefox

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Build for Chrome
      run: npm run build:chrome

    - name: Archive Chrome build files
      run: cd dist/chrome && zip -r -FS ../../build-chrome.zip . --exclude '*.git*'

    - name: Build for Firefox
      run: npm run build:firefox

    - name: Archive Firefox build files
      run: cd dist/firefox && zip -r -FS ../../build-firefox.zip . --exclude '*.git*'

    - name: Extract Release Version
      id: extract_version
      run: |
        # Extract the version from the tag (e.g., v1.0.0)
        tag_name=${{ github.ref_name }}
        version=${tag_name#v}
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Chrome build to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build-chrome.zip
        asset_name: build-chrome-${{ env.VERSION }}.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Firefox build to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build-firefox.zip
        asset_name: build-firefox-${{ env.VERSION }}.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
