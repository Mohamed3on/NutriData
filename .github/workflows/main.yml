name: Build and Release for Chrome and Firefox

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - run: pnpm install

      - name: Configure Git and bump version
        id: version
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          pnpm run release || true
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          git push --follow-tags origin main || git push origin main

      - name: Build and archive
        run: |
          pnpm run build:chrome
          pnpm run build:firefox
          cd dist/chrome && zip -r -FS ../../build-chrome.zip . --exclude '*.git*'
          cd ../firefox && zip -r -FS ../../build-firefox.zip . --exclude '*.git*'

      - name: Create or update GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_params=(v${{ steps.version.outputs.new_version }} --notes-file CHANGELOG.md)
          if gh release view "${release_params[0]}" &> /dev/null; then
            gh release edit "${release_params[@]}"
          else
            gh release create "${release_params[@]}"
          fi

          for asset in build-chrome.zip build-firefox.zip; do
            gh release upload "${release_params[0]}" $asset --clobber
          done
